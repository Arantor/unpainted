#GLFW_APP_ICON="Unpainted.ico"
#GLFW_WINDOW_TITLE="Unpainted"
#GLFW_APP_LABEL="Unpainted"
#GLFW_APP_PUBLISHER="Daunt By Name, Dauntless By Nature"

#GLFW_WINDOW_WIDTH=640
#GLFW_WINDOW_HEIGHT=512
#GLFW_WINDOW_RESIZABLE=True
#GLFW_WINDOW_DECORATED=True

Strict

Import mojo
Import guiBasic

Import "data/Atlas.png"

Import UAbout
Import UGridding
Import UMenu
Import UPalette
Import USpacing
Import UStatusBar
Import UToolbox

Global Unpainted: UnpaintedApp

Function Main: Int()
	Unpainted = New UnpaintedApp()
	Return 0
End Function

Class UnpaintedApp Extends App
	Field Screen: Gui
	Field Menu: UnpaintedMenu
	Field Toolbox: Toolbox
	Field StatusBar: StatusBar
	Field Palette: Palette
	Field PaintMode: PaintingMode
	Field SpacingMode: SpacingMode
	Field GriddingMode: GriddingMode
	Field Edited: Bool
	
	Field AboutDialog: AboutDialog
	
	Field Dialogs: StringMap<Int>
	
	Method ShowDialog: Void (DialogName: String)
		Self.Dialogs.Add(DialogName, 1)
	End Method

	Method HideDialog: Void (DialogName: String)
		If Self.Dialogs.Contains(DialogName)
			Self.Dialogs.Remove(DialogName)
		End If
	End Method
	
	Method DialogShown: Bool (DialogName: String)
		Return Self.Dialogs.Contains(DialogName)
	End Method

	Method DialogsShown: Bool ()
		Return Self.Dialogs.Count() > 0
	End Method

	Method OnCreate: Int ()
		SetUpdateRate(60)
		
		Local size: DisplayMode = DesktopMode()
		SetDeviceWindowSizeLimits(640, 512, size.Width, size.Height)
		
		Self.Dialogs = New StringMap<Int>
		
		Self.Screen = Gui.CreateScreen()
		
		Self.Toolbox = New Toolbox(Screen, DeviceWidth() - Toolbox.Width, 0)
		
		Self.Palette = New Palette(576, 240)
		
		Self.StatusBar = New StatusBar(Screen, 0, DeviceHeight() - 24, DeviceWidth(), 24)

		Self.PaintMode = New PaintingMode
		Self.PaintMode.Set(PaintingMode.Color)
		
		Self.SpacingMode = New SpacingMode(Screen)
		Self.GriddingMode = New GriddingMode(Screen)
		
		Self.Menu = New UnpaintedMenu(Screen)
		
		Self.AboutDialog = New AboutDialog(Screen)
		
		Self.Edited = False

		Return 0
	End Method
	
	Method OnUpdate: Int ()
		' Always process the menu for updates.
		Self.Menu.Update()
		
		' Always process the toolbox for updates.
		Self.Toolbox.Update()
		
		' Always process the palette for updates.
		Self.Palette.Update()
		
		' Always process the statusbar for updates.
		Self.StatusBar.Update()

		' Dispatch to each thing that might be open for updates.
		For Local Dialog:String = EachIn Self.Dialogs.Keys()
			Select Dialog
				Case SpacingMode.SpacingDialog
					Self.SpacingMode.Update()
				Case AboutDialog.AboutPopup
					Self.AboutDialog.Update()
				Case GriddingMode.GriddingDialog
					Self.GriddingMode.Update()
			End
		Next

		' Update the main GUI.
		Gui.Update()
		
		Return 0
	End Method

	Method OnRender: Int ()
		Cls(0, 0, 0)
		SetColor(255, 255, 255)
		Self.StatusBar.Draw()
		Gui.Draw()
		
		Self.Palette.Draw()
		
		Return 0
	End Method
	
	Method OnResize: Int ()
		Print DeviceWidth()
		Self.Toolbox.ResizeScreen(DeviceWidth(), DeviceHeight())
		Self.StatusBar.ResizeScreen(0, DeviceHeight() - 24, DeviceWidth(), 24)
		Self.Palette.BaseX = DeviceWidth() - 64

		Self.Screen.W = DeviceWidth()
		Self.Screen.H = DeviceHeight()
		Return 0
	End Method
End Class

Class PaintingMode
	Field PaintMode: Int

	Const Matte: Int = 1
	Const Color: Int = 2
	Const Replace: Int = 3
	Const Smear: Int = 4
	Const Shade: Int = 5
	Const Blend: Int = 6
	Const Cycle: Int = 7
	Const Smooth: Int = 8
	Const Mix: Int = 9
	Const HBrite: Int = 10
	Const RubThru: Int = 11
	
	Method Get: Int ()
		Return PaintMode
	End Method

	Method Set: Void (newmode: Int)
		Select newmode
			Case Matte, Color, Replace, Smear, Shade, Blend, Cycle, Smooth, Mix, HBrite, RubThru
				PaintMode = newmode
			Default
				Throw New InvalidPaintModeException
		End Select
	End Method
	
	Method GetString: String ()
		Select PaintMode
			Case Matte
				Return "Matte"
			Case Color
				Return "Colour"
			Case Replace
				Return "Replace"
			Case Smear
				Return "Smear"
			Case Shade
				Return "Shade"
			Case Blend
				Return "Blend"
			Case Cycle
				Return "Cycle"
			Case Smooth
				Return "Smooth"
			Case Mix
				Return "Mix"
			Case HBrite
				Return "HBrite"
			Case RubThru
				Return "RubThru"
			Default
				Return ""
		End Select
	End Method
End Class

Class InvalidPaintModeException Extends Throwable

End Class